{"name":"Sofpyon-framework","tagline":"MVC風なことができるシンプルなPHPフレームワーク","body":"# SofPyon Framework( Ver. α of α )\r\nMVC風なことができるシンプルなPHPフレームワーク(超未完成・なおかつエセ)\r\n\r\n##このプログラムのレベル\r\n - __だいぶ実用的になった__\r\n  - <a href=\"http://sofpyon.github.io/about_applevel.html\" target=\"_blank\">この表記について</a>\r\n\r\n##最低動作環境\r\n - __PHP 5.3 以降__\r\n  - なるべく、最新で安定的なバージョンで利用されることをおすすめします。\r\n  - PHP 5.3 で新たに実装された機能を利用しています。\r\n\r\n##特徴\r\n - __１ファイルフレームワーク__ です\r\n - O/Rマッピングを一切 __使用していません__\r\n  - でも、それなりに簡単にDB操作できるはずです\r\n - コントローラやモデルなどの基底クラスは __自分で作ってください__\r\n - テンプレート使えます。ただし、テンプレートにView部分を表示させるには、 __`include $file_view;` させてください__\r\n - index コントローラの index アクションを作成すると、 __http://example.jp/ といったURLでアクセスできます__\r\n  - index という名前は、`$config['index']` で __変更できます__\r\n - 404.php を作成すると、404ページになります\r\n  - ただし、404.php には、MVCを __採用していません__\r\n  - でも、404ファイルの位置は、 `$config['404_file']` で __変更できます__\r\n - そもそも、__開発者の思い通りに動いていない可能性がある__\r\n  - PHPの学習が不十分な段階でフレームワークを作成したため\r\n - その他、設定項目は、 `$config` で変更できます\r\n\r\n##使い方\r\n\r\n注) 以下、開発者の __願望が含まれている可能性があります__ 。\r\n\r\n###0. ファイル構成\r\n - http://example.jp/\r\n  - .htaccess ( Apache 以外の方はご自身で作成してください )\r\n  - oss_framework.php\r\n  - index.php ( 添付されています )\r\n   - __model__\r\n   - __view__\r\n     - __template__\r\n   - __controller__\r\n\r\n###1. Controller を作る\r\n```php\r\n<?php\r\n//controller/index_controller.php\r\nclass index_controller {\r\n\r\n  public function __construct( $param ) {\r\n    $this->param = $param;\r\n  }\r\n\r\n  public function index(){\r\n    view( array( 'data' => $this->param[0] ) );\r\n  }\r\n}\r\n```\r\n\r\n###2. View を作る\r\n```php\r\n<?php\r\n//view/index/index.php\r\nPARAM0:\r\n<?php echo $array_view['data']; ?>\r\n```\r\n\r\n###実行結果\r\nhttp://example.jp/\r\n\r\n###3. Model は？\r\n```php\r\n<?php\r\n//model/hoge_model.php\r\nclass hoge_model {\r\n\r\n  public function __construct( $db ) {\r\n    $this->db = $db;\r\n  }\r\n\r\n  public function get() {\r\n    $sql = 'SELECT * FROM hoge_table WHERE col = :value';\r\n    $conditions = array( ':value' => 13 );\r\n    return $this->db->select( $sql, $conditions );\r\n  }\r\n\r\n}\r\n```\r\n\r\n```\r\n//Controller\r\n$model = model( 'hoge' );\r\n$data = $model->get();\r\nview( array( 'data' => $data ) );\r\n```\r\n\r\n## このフレームワークの趣旨について\r\nこのフレームワークは、いわゆる __オレオレフレームワーク__ です。面倒な書き方をしなくてもWebアプリが作れる、という程度を目指していますので、ほかのフレームワークのように機能は充実していません。\r\n(強いて言うなら、htmlspecialchars と echo を同時に行う h 関数がこのフレームワークには存在します)\r\n\r\nこのフレームワークで、例えば、コントローラ名を省略して http://example.jp/action とアクセスされた場合、 index アクションの action メソッドが呼び出されるようにしたいという際は、ご自身で __oss_framework.php を編集していただくことになりますので__ よろしくお願いします。\r\n\r\nなお、その際は、ぜひ、プルリクエストなどを行っていただけると幸いです。\r\n\r\n## その他の使い方\r\noss_framework.php を解読すればわかるはずです。\r\n\r\n## 注意\r\n - 本フレームワークは、現在、アルファのアルファとして提供しています。\r\n - 使用した際に生じた問題は、データの誤消去なども含めて保証できません。\r\n - 何かあれば、質問するなり、Pull RequestなりPull Requestなりしてください。\r\n\r\n## ライセンスについて\r\nMIT ライセンス\r\n\r\n(詳細は、LICENSE.txt をご覧ください)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}